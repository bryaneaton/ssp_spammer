package org.example

import kotlin.random.Random

data class SSP(
    val id: Int = 0,
    val uuid: String = "",
    val systemName: String,
    val version: String = "",
    val otherIdentifier: String = "",
    val confidentiality: String = "",
    val integrity: String = "",
    val availability: String = "",
    val categorizationJustification: String = "",
    val status: String = listOf("Operational", "Under Development", "Undergoing a Major Modification", "In Transition", "Other").random(Random),
    val explanationForNonOperational: String = "",
    val description: String = "",
    val systemType: String = listOf("Major Application", "General Support System").random(Random),
    val systemUrl: String = "",
    val purpose: String = "",
    val conditionsOfApproval: String = "",
    val environment: String = "",
    val lawsAndRegulations: String = "",
    val authorizationBoundary: String = "",
    val networkArchitecture: String = "",
    val dataFlow: String = "",
    val overallCategorization: String = "",
    val maturityTier: String = "",
    val wizProjectId: String = "",
    val serviceNowAssignmentGroup: String = "",
    val jiraProject: String = "",
    val tenableGroup: String = "",
    val parentId: Int? = null,
    val parentModule: String? = null,
    val createdById: String = "",
    val dateCreated: String = "",
    val lastUpdatedById: String = "",
    val dateLastUpdated: String = "",
    val users: Int = 0,
    val privilegedUsers: Int = 0,
    val usersMFA: Int = 0,
    val privilegedUsersMFA: Int = 0,
    val internalUsers: Int = 0,
    val externalUsers: Int = 0,
    val internalUsersFuture: Int = 0,
    val externalUsersFuture: Int = 0,
    val hva: Boolean = false,
    val practiceLevel: String = "",
    val processLevel: String = "",
    val cmmcLevel: String = "",
    val cmmcStatus: String = "",
    val isPublic: Boolean = true,
    val executiveSummary: String = "",
    val recommendations: String = "",
    val prepOrgName: String = "",
    val prepAddress: String = "",
    val prepOffice: String = "",
    val prepCityState: String = "",
    val cspOrgName: String = "",
    val cspAddress: String = "",
    val cspOffice: String = "",
    val cspCityState: String = "",
    val bModelSaaS: Boolean = false,
    val bModelPaaS: Boolean = false,
    val bModelIaaS: Boolean = false,
    val bModelOther: Boolean = false,
    val otherModelRemarks: String = "",
    val bDeployPublic: Boolean = false,
    val bDeployPrivate: Boolean = false,
    val bDeployGov: Boolean = false,
    val bDeployHybrid: Boolean = false,
    val bDeployOther: Boolean = false,
    val deployOtherRemarks: String = "",
    val authenticationLevel: String = "",
    val identityAssuranceLevel: String = "",
    val authenticatorAssuranceLevel: String = "",
    val federationAssuranceLevel: String = "",
    val fedrampAuthorizationType: String = "",
    val fedrampAuthorizationLevel: String = "",
    val fedrampAuthorizationStatus: String = "",
    val fedrampId: String = "",
    val defaultAssessmentDays: Int = Random.nextInt(0, 365) // Random the value between 1 and 365
)